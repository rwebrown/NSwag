[System.CodeDom.Compiler.GeneratedCode("NSwag", "{{ ToolchainVersion }}")]
public partial interface I{{ Class }}
{
    {% template Client.Interface.Body %}
{% for operation in InterfaceOperations -%}
{%   if GenerateOptionalParameters == false -%}
    {% template Client.Method.Documentation %}
{%   if InjectServiceFabric -%}
    /// <param name="enableLocalDev">Specifies the call should go to localdev.</param>
{%   endif -%}
    {% if InjectServiceFabric == false -%}{{ operation.ResultType }} {% else -%}System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> {% endif -%} {{ operation.ActualOperationName }}Async({% for parameter in operation.Parameters %}{{ parameter.Type }} {{ parameter.VariableName }}{% if GenerateOptionalParameters and parameter.IsOptional %} = null{% endif %}{% if parameter.IsLast == false or InjectServiceFabric %}, {% endif %}{% endfor %}{% if InjectServiceFabric %}bool enableLocalDev = true{% endif %});

{%   endif -%}
{%   if GenerateSyncMethods -%}
    {% template Client.Method.Documentation %}
{%   if InjectServiceFabric -%}
    /// <param name="enableLocalDev">Specifies the call should go to localdev.</param>
{%   endif -%}
    {% if InjectServiceFabric == false -%}{{ operation.SyncResultType }} {% else -%}System.Net.Http.HttpResponseMessage {% endif -%} {{ operation.ActualOperationName }}({% for parameter in operation.Parameters %}{{ parameter.Type }} {{ parameter.VariableName }}{% if GenerateOptionalParameters and parameter.IsOptional %} = null{% endif %}{% if parameter.IsLast == false or InjectServiceFabric %}, {% endif %}{% endfor %}{% if InjectServiceFabric %}bool enableLocalDev = true{% endif %});

{%   endif -%}
    {% template Client.Method.Documentation %}
    /// <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
{%   if InjectServiceFabric -%}
    /// <param name="enableLocalDev">Specifies the call should go to localdev.</param>
{%   endif -%}
    {% if InjectServiceFabric == false -%}{{ operation.ResultType }} {% else -%}System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> {% endif -%} {{ operation.ActualOperationName }}Async({% for parameter in operation.Parameters %}{{ parameter.Type }} {{ parameter.VariableName }}{% if GenerateOptionalParameters and parameter.IsOptional %} = null{% endif %}, {% endfor %}System.Threading.CancellationToken cancellationToken{% if GenerateOptionalParameters %} = default(System.Threading.CancellationToken){% endif %}{% if InjectServiceFabric %}, bool enableLocalDev = true{% endif %});
{% endfor -%}
}